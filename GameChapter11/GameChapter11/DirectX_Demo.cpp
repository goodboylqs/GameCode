//----------------------【程序说明】----------------------------------------------------
//文件名：DirectX_Demo.cpp
//内容: Direct3D的程序框架
//起始时间：2017.3.29     12:43   
//修改记录:
//状态：完成    ---    （完成，未完成，有bug）          
//说明：
//最后修改时间：2017.4.6  21:41
//--------------------------------------------------------------------------------------
//------------------------------【头文件声明】------------------------------------------

#include"time.h"
#include<tchar.h>     //使用swprintf_s所需要的头文件
#include"d3d9.h"
#include"d3dx9.h"
//--------------------------------------------------------------------------------------
//----------------------【库文件】------------------------------------------------------
#pragma comment(lib, "WINMM.LIB")    //PlaySound函数
#pragma comment(lib,"d3d9.lib")
#pragma comment(lib,"d3dx9.lib")
//--------------------------------------------------------------------------------------
//---------------------------【宏定义】-------------------------------------------------
#define WINDOW_WIDTH  800
#define WINDOW_HEIGHT 599
//定义一个安全释放宏，便于后面COM接口指针的释放
#define SAFE_RELEASE(p) {if(p) {(p)->Release(); (p) = NULL;}}
#define WINDOW_TITLE L"致我们永不磨灭的游戏开发梦想"
//--------------------------------------------------------------------------------------
//-------------------------【类型声明】-------------------------------------------------
//--------------------------------------------------------------------------------------
//-------------------------【全局变量声明】---------------------------------------------
//描述：全局变量的声明
//--------------------------------------------------------------------------------------
IDirect3DDevice9 *g_pd3dDevice = NULL;
ID3DXFont *g_pFont = NULL;
float g_FPS = 0.0f;    //帧速率
wchar_t g_strFPS[50];   //包含帧速率字符串的数组
//---------------------------------------------------------------------------------------

//------------------------------【函数声明】---------------------------------------------
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd);
LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam);

HRESULT Direct3D_Init(HWND hwnd);
HRESULT Object_Init(HWND hwnd);
void Direct3D_Render(HWND hwnd);
void Direct3D_CleanUp();
float Get_FPS();
//---------------------------------------------------------------------------------------
//------------------------------【WinMain函数】------------------------------------------
//功能：Windows程序入口函数
//起始时间：2017.3.4      22:14    
//修改记录：
//状态：完成    ---    （完成，未完成，有bug）          
//说明：
//最后修改时间：2017.3.4  00：00   
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)
{
	//第一步：设计窗口类
	WNDCLASSEX wndClass = { 0 };          //定义窗口类
	wndClass.cbSize = sizeof(WNDCLASSEX);   //窗口的字节数
	wndClass.style = CS_HREDRAW | CS_VREDRAW;   //窗口央视
	wndClass.lpfnWndProc = WndProc;      //指定窗口过程函数
	wndClass.cbClsExtra = 0;								//窗口类的附加内存，取0就可以了
	wndClass.cbWndExtra = 0;							//窗口的附加内存，依然取0就行了
	wndClass.hInstance = hInstance;						//指定包含窗口过程的程序的实例句柄。
	wndClass.hIcon = (HICON)::LoadImage(NULL, L"icon.ico", IMAGE_ICON, 0, 0, LR_DEFAULTSIZE | LR_LOADFROMFILE);  //本地加载自定义ico图标
	wndClass.hCursor = LoadCursor(NULL, IDC_ARROW);    //指定窗口类的光标句柄。
	wndClass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);  //为hbrBackground成员指定一个白色画刷句柄	
	wndClass.lpszMenuName = NULL;						//用一个以空终止的字符串，指定菜单资源的名字。
	wndClass.lpszClassName = L"GameWindow";        //指定窗口类的名字
												   //第二步：注册窗口类
	if (!RegisterClassEx(&wndClass))
		return -1;

	//第三步：正式创建窗口类
	HWND hwnd = CreateWindowW(L"GameWindow",
		WINDOW_TITLE,
		WS_OVERLAPPEDWINDOW,
		CW_USEDEFAULT,
		CW_USEDEFAULT,
		WINDOW_WIDTH,
		WINDOW_HEIGHT,
		NULL, NULL, hInstance, NULL);

	if (S_OK == Direct3D_Init(hwnd))
	{
		MessageBox(hwnd, L"Direct3D初始化完成", L"我的消息窗口", 0);
	}
	else
	{
		MessageBox(hwnd, L"Direct3D初始化失败", L"我的消息窗口", 0);
	}

	//第四步：窗口的移动显示与更新
	MoveWindow(hwnd, 200, 20, WINDOW_WIDTH, WINDOW_HEIGHT, true);		//调整窗口显示时的位置，使窗口左上角位于（200,20）处
	ShowWindow(hwnd, nShowCmd);    //调用ShowWindow函数来显示窗口
	UpdateWindow(hwnd);						//对窗口进行更新，就像我们买了新房子要装修一样

											//Direct3D资源初始化
	
	//	PlaySound(L"GameMedia//梦幻西游原声-战斗1-森林.wav", NULL, SND_ASYNC | SND_LOOP);

	//第五步：消息循环过程
	MSG msg = { 0 };        //定义消息
	while (msg.message != WM_QUIT)     //如果不是WM_QUIT消息就继续循环
	{
		if (PeekMessage(&msg, 0, 0, 0, PM_REMOVE))  //查看应用消息队列，有消息时将队列中的消息派发出去
		{
			TranslateMessage(&msg);
			DispatchMessage(&msg);
		}
		else
		{
			Direct3D_Render(hwnd);   //进行渲染
		}
	}
	//第六步：窗口类的注销
	UnregisterClass(L"GameWindow", wndClass.hInstance);  //程序准备结束，注销窗口类
	return 0;
}
//---------------------------------------------------------------------------------------
//-------------------------------------【WndProc函数】-----------------------------------
//功能：窗口过程函数
//起始时间：2017.3.29	12：45   
//修改记录：
//状态：未完成
//说明：
//最后修改时间：
LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
{
	switch (message)
	{
	case WM_PAINT:     //客户区重绘消息
		Direct3D_Render(hwnd);     //调用Direct3D进行渲染
		ValidateRect(hwnd, NULL);   //更新客户区的显示
		break;
	case WM_KEYDOWN:
		if (wParam == VK_ESCAPE)
		{
			DestroyWindow(hwnd);
		}
		break;
	case WM_DESTROY:
		Direct3D_CleanUp();
		PostQuitMessage(0);
		break;
	default:
		return DefWindowProc(hwnd, message, wParam, lParam);
	}
	return 0;
}
//---------------------------------------------------------------------------------------

//---------------------------【Direct3D_Init函数】--------------------------------------------
//功能：Direct3D初始化，进行Direct3D的初始化
//起始时间：2017.3.29    12：45
//修改记录：
//状态：未完成    ---    （完成，未完成，有bug）          
//说明：
//最后修改时间：
HRESULT Direct3D_Init(HWND hwnd)
{
	//---------【Direct3D初始化四部曲之一，创接口】-------------
	//创建Direct3D接口对象，以便用该Direct3D对象创建Direct3D设备对象
	LPDIRECT3D9 pD3D = NULL;       //接口对象的创建
	if (NULL == (pD3D = Direct3DCreate9(D3D_SDK_VERSION)))
	{
		return E_FAIL;
	}
	//---------【Direct3D初始化四部曲之二，取信息】-------------
	//获取硬件设备信息
	D3DCAPS9 caps;
	int vp = 0;
	if (FAILED(pD3D->GetDeviceCaps(D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, &caps)))
		return E_FAIL;
	if (caps.DevCaps & D3DDEVCAPS_HWTRANSFORMANDLIGHT)
	{
		vp = D3DCREATE_HARDWARE_VERTEXPROCESSING;   //支持硬件顶点运算
	}
	else
	{
		vp = D3DCREATE_SOFTWARE_VERTEXPROCESSING;  //不支持硬件顶点运算
	}
	//---------【Direct3D初始化四部曲之三，填内容】-------------
	//填充D3DPERSENT_PARAMETERS结构体
	D3DPRESENT_PARAMETERS d3dpp;
	ZeroMemory(&d3dpp, sizeof(d3dpp));
	d3dpp.BackBufferWidth = WINDOW_WIDTH;
	d3dpp.BackBufferHeight = WINDOW_HEIGHT;
	d3dpp.BackBufferFormat = D3DFMT_A8R8G8B8;
	d3dpp.BackBufferCount = 1;
	d3dpp.MultiSampleType = D3DMULTISAMPLE_NONE;
	d3dpp.hDeviceWindow = hwnd;
	d3dpp.MultiSampleQuality = 0;
	d3dpp.SwapEffect = D3DSWAPEFFECT_DISCARD;
	d3dpp.Windowed = true;
	d3dpp.EnableAutoDepthStencil = true;
	d3dpp.AutoDepthStencilFormat = D3DFMT_D24S8;
	d3dpp.Flags = 0;
	d3dpp.FullScreen_RefreshRateInHz = 0;
	d3dpp.PresentationInterval = D3DPRESENT_INTERVAL_IMMEDIATE;
	//---------【Direct3D初始化四部曲之四，创设备】-------------
	//创建Direct3D设备接口
	if (FAILED(pD3D->CreateDevice(D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL,
		hwnd, vp, &d3dpp, &g_pd3dDevice)))
		return E_FAIL;

	SAFE_RELEASE(pD3D)   //接口对象的使命完成

	//调用一次Object_Init进行被渲染的物体的资源的初始化
	if (!(S_OK == Object_Init(hwnd)))
			return E_FAIL;
	return S_OK;
}
//--------------------------------------------------------------------------------------
//---------------------------【Object_Init函数】--------------------------------------------
//功能：渲染资源初始化，在此函数中进行要被渲染的物体的资源的初始化
//起始时间：2017.3.29    12：45
//修改记录：
//状态：未完成    ---    （完成，未完成，有bug）          
//说明：
//最后修改时间：
HRESULT Object_Init(HWND hwnd)
{
	//创建字体
	if (FAILED(D3DXCreateFont(g_pd3dDevice, 36, 0, 0, 1,
		false, DEFAULT_CHARSET, OUT_DEFAULT_PRECIS,
		DEFAULT_QUALITY, 0, _T("微软雅黑"), &g_pFont)))
	{
		return E_FAIL;
	}
	srand((unsigned)time(NULL));

	return S_OK;
}
//--------------------------------------------------------------------------------------
//-------------------【Direct3D_Render函数】-------------------------------------------------
//功能：绘制函数
//起始时间：2017.3.29   12：45   
//修改记录：
//状态：未完成    ---    （完成，未完成，有bug）          
//说明：
//最后修改时间：
void Direct3D_Render(HWND hwnd)
{
	//------------【Direct3D渲染五部曲第一步：清屏操作】----------------
	g_pd3dDevice->Clear(0, NULL, D3DCLEAR_TARGET, 
		D3DCOLOR_XRGB(0, 0, 0), 1.0f, 0);

	//定义一个矩形，用于获取主窗口矩形
	RECT formatRect;
	GetClientRect(hwnd, &formatRect);

	//------------【Direct3D渲染第二步：开始绘制】-----------------------
	g_pd3dDevice->BeginScene();

	//------------【Direct3D渲染第三步：正式绘制】-----------------------
	//在窗口右上角显示每秒帧数
	int charCount = swprintf_s(g_strFPS, 20, _T("FPS:%0.3f"), Get_FPS());
	g_pFont->DrawText(NULL, g_strFPS, charCount, &formatRect, 
		DT_TOP | DT_RIGHT, D3DCOLOR_XRGB(255, 39, 136));

	//在纵坐标100处，写第一处文字
	formatRect.top = 100;
	g_pFont->DrawText(0, _T("致我们永不磨灭的游戏开发梦想"), -1, 
		&formatRect, DT_CENTER, D3DCOLOR_XRGB(68, 139, 256));

	formatRect.top = 250;
	g_pFont->DrawText(0, _T("游戏开发的世界！"), -1, 
		&formatRect, DT_CENTER, D3DCOLOR_XRGB(255, 255, 255));

	formatRect.top = 400;
	g_pFont->DrawText(0, _T("闪闪惹人爱"), -1, &formatRect,
		DT_CENTER, D3DCOLOR_XRGB(rand() % 256, rand() % 256, rand() % 256));

	//-------------------【Direct3D渲染第四步：结束绘制】------------------------
	g_pd3dDevice->EndScene();
	
	//-------------------【Direct3D渲染第五步：清理资源】------------------------
	g_pd3dDevice->Present(NULL,NULL,NULL,NULL);
}
//--------------------------------------------------------------------------------------
//-------------------------【Get_FPS函数】----------------------------------------------
//功能：获取每秒的帧数
//起始时间：2017.4.1  12:49
//状态：
//说明：
//最后修改时间：
float Get_FPS()
{
	static float fps = 0;   //我们需要计算的fps值
	static int frameCount = 0;  //帧数
	static float currentTime = 0.0f;  //当前时间
	static float lastTime = 0.0f;  //持续时间

	frameCount++;   //每调用一次Get_FPS函数，帧数就加1
	currentTime = timeGetTime() * 0.001f;

	//如果当前时间减去持续时间大于1秒钟，
	//就进行一次FPS的计算和持续时间的更新
	//并将帧数清0
	if (currentTime - lastTime > 1.0f)
	{
		fps = (float)frameCount / (currentTime - lastTime);
		lastTime = currentTime;
		frameCount = 0;
	}

	return fps;
}

//---------------------------【Direct3D_CleanUp函数】---------------------------------------
//功能：程序退出之前的资源清理
//起始时间：2017.3.29  12：45 
//修改记录：
//状态：完成
//说明：
//最后修改时间：2017.4.1   12:53
VOID Direct3D_CleanUp()
{
	SAFE_RELEASE(g_pFont)
	SAFE_RELEASE(g_pd3dDevice)
}
//--------------------------------------------------------------------------------------
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    